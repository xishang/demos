<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大能够保持idel状态的对象数 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!-- 最大分配的对象数 -->
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <!-- 当调用borrowObject方法时，是否进行有效性检查 -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.conn.host}"/>
        <property name="port" value="${redis.conn.port}"/>
        <property name="timeout" value="${redis.conn.timeout}"/>
        <property name="password" value="${redis.conn.password}"/>
        <property name="database" value="${redis.conn.database}"/>
    </bean>

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
    </bean>

    <!-- spring自己的缓存管理器 -->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="com.demos.spring.completedemo.redis.MyRedisCache">
                    <property name="name" value="${redis.cache.name}"/>
                    <property name="redisTemplate" ref="redisTemplate"/>
                </bean>
            </set>
        </property>
    </bean>

    <!-- 自定义主键生成策略 -->
    <bean id="keyGenerator" class="com.demos.spring.completedemo.redis.MyKeyGenerator"/>

    <!-- 启用缓存注解 -->
    <cache:annotation-driven cache-manager="cacheManager" key-generator="keyGenerator"/>

</beans>